1.Form Structure (<form> element):

Question:a Explain the purpose of the <form> element in HTML and how it is used to create interactive forms on web pages.
Ans:
Purpose of the <form> Element:
Data Collection:Forms gather user input through various elements like text fields, checkboxes, radio buttons, dropdown menus, etc.
Submission of Data: Once filled, the form data is sent to the server via HTTP methods (GET or POST) for processing (e.g., logging in, creating accounts, submitting comments).

<form action="/submit-form" method="post">
  <label for="name">Name:</label>
  <input type="text" id="name" name="user_name">
  
  <label for="email">Email:</label>
  <input type="email" id="email" name="user_email">
  
  <input type="submit" value="Submit">
</form>


Question:b What attributes can you use with the <form> element to specify the method of data submission and the target URL?
Ans: 1.action: Specifies the URL where form data will be submitted.
     2.method: Defines how data will be sent to the server (GET for visible, small data or POST for secure, large data).
     3.input Elements: Accept user inputs (e.g., text fields, email, checkboxes).
     4.Submit Button: Submits the form data for processing.


2. Form Input Types (text, password, radio buttons, checkboxes, etc.): 

Question:a What are some common input types in HTML forms?
Ans:HTML forms support various types of input elements that allow users to interact with web pages. Some common input types in HTML forms include:

1.Text (<input type="text">): A single-line text input field used for entering short strings of text, such as names or usernames.

2.Password (<input type="password">): Similar to the text input, but characters are masked for privacy, commonly used for entering passwords.

3.Email (<input type="email">): Allows users to enter an email address and ensures basic validation for email formatting.

4.Number (<input type="number">): Used for entering numeric values, often with options for setting minimum and maximum limits.

5.Radio (<input type="radio">): Allows users to select one option from a group of choices.

6.Checkbox (<input type="checkbox">): Allows users to select one or more options from a list.

7.Date (<input type="date">): A date-picker control for selecting dates (e.g., birthdays).

8.Range (<input type="range">): Allows users to select a value from a defined range using a slider.

9.File (<input type="file">): Enables users to upload files, such as images or documents, from their device.

10.Submit (<input type="submit">): A button that submits the form data to the server.

11.Color (<input type="color">): Provides a color picker for selecting colors.

Question:b Create a form with a text input field for the user's name and a password input field.
Ans: <!DOCTYPE html>
<html>
<head>
    <title>Login Form</title>
</head>
<body>

    <h2>User Login</h2>

    <form action="/submit" method="POST">
        <!-- Text input field for the user's name -->
        <label for="username">Name:</label>
        <input type="text" id="username" name="username" required>
        <br><br>

        <!-- Password input field -->
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>
        <br><br>

        <!-- Submit button -->
        <input type="submit" value="Login">
    </form>

    </body>
    </html>

Question:c Describe the difference between radio buttons and checkboxes and provide an example scenario for using each.
Ans: 1.Radio Buttons (<input type="radio">):

.Purpose: Radio buttons allow users to select one option from a set of mutually exclusive choices.
.Selection behavior: When one radio button is selected, all other radio buttons in the same group become unselected.
.Example Scenario: A form where the user can choose only one gender option (Male/Female/Other).


ex- <form>
    <label>Select Gender:</label><br>
    <input type="radio" name="gender" value="male"> Male<br>
    <input type="radio" name="gender" value="female"> Female<br>
    <input type="radio" name="gender" value="other"> Other
</form>


2. Checkboxes (<input type="checkbox">):

.Purpose: Checkboxes allow users to select multiple options independently from a list.
.Selection behavior: Multiple checkboxes can be selected at the same time without affecting others.
.Example Scenario: A form where users can choose multiple hobbies from a list (Reading, Writing, Traveling, etc.).
ex- <form>
    <label>Select your hobbies:</label><br>
    <input type="checkbox" name="hobby" value="reading"> Reading<br>
    <input type="checkbox" name="hobby" value="writing"> Writing<br>
    <input type="checkbox" name="hobby" value="traveling"> Traveling
</form>


3. Labelling Form Elements (<label> element): 



Question: Why is it important to use the <label> element when associating labels with form inputs?
 Provide an example of proper label usage.
Ans:The <label> element in HTML is important because it enhances the accessibility and usability of web
   forms by associating labels with their corresponding form inputs. It allows screen readers to correctly
   interpret the form, ensuring that users with disabilities can interact with it properly. Additionally,
   when a <label> is clicked, it automatically focuses the associated input  field, making the form easier
   to use.

   Why Use the <label> Element?
   1.Accessibility: Screen readers announce the label text when the associated input is focused, helping
    visually impaired users understand the purpose of each form field.
   2.Usability: Clicking on the label focuses the associated input field, making it easier for users to
    interact with the form, especially in small or tightly packed interfaces.
   3.Keyboard Navigation: It helps users who rely on keyboard navigation to understand the formâ€™s layout
    more intuitively.


  <form>
  <label for="username">Username:</label>
  <input type="text" id="username" name="username"><br><br>

  <label for="password">Password:</label>
  <input type="password" id="password" name="password"><br><br>

  <input type="submit" value="Submit">
</form>


